name: Selenium Data Fetch Pipeline

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  push:
    branches:
      - main  # Run the pipeline when code is pushed to the main branch

jobs:
  fetch-and-store:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List repository files
        run: ls -R

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium psycopg2-binary

      - name: Install Chrome and WebDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | grep -oP "\d+\.\d+\.\d+")
          DRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          wget https://chromedriver.storage.googleapis.com/${DRIVER_VERSION}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Set up PostgreSQL
        uses: Harmon758/postgresql-action@v2.3.0
        with:
          postgresql version: '14'
          db name: RetailPrice
          username: postgres
          password: root

      - name: Run Selenium Script to Fetch Data
        env:
          DB_HOST: localhost
          DB_NAME: RetailPrice
          DB_USER: postgres
          DB_PASS: root
        run: |
          python ./scripts/selenium_fetch_data.py

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: fetch-and-store

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List repository files
        run: ls -R

      - name: Set up Python for Django
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Django dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django migrations
        env:
          DB_HOST: localhost
          DB_NAME: RetailPrice
          DB_USER: postgres
          DB_PASS: root
        run: |
          python manage.py migrate

      - name: Run Django tests
        run: |
          python manage.py test

      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

      - name: Build project
        run: |
          npm install
          npm run build

      - name: Deploy project
        run: |
          ssh user@your-server "cd /path/to/project && git pull && ./deploy.sh"
