name: Selenium Data Fetch and Build Pipeline

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *' # Runs every hour at the start of the hour

jobs:
  data-fetch:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install Selenium and other dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Install Chrome browser and WebDriver
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          sudo apt-get install -y google-chrome-stable
          CHROMEDRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          chromedriver --version

      # Run Selenium script to fetch and store data
      - name: Fetch and store data
        env:
          DB_HOST: localhost
          DB_USER: postgres
          DB_PASS: root
          DB_NAME: RetailPrice
        run: |
          python scripts/selenium_fetch_data.py

  build-project:
    runs-on: ubuntu-latest
    needs: data-fetch

    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Django environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install backend dependencies
      - name: Install Django dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python manage.py collectstatic --noinput

      # Set up Node.js for the frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Install and build frontend
      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

      # Deploy Django application and serve frontend
      - name: Run backend and frontend
        run: |
          python manage.py migrate
          python manage.py runserver 0.0.0.0:8000
